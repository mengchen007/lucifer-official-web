(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["view-book"],{"0cc6":function(t,a,i){},"159b":function(t,a,i){var s=i("da84"),n=i("fdbc"),e=i("17c2"),o=i("9112");for(var l in n){var r=s[l],c=r&&r.prototype;if(c&&c.forEach!==e)try{o(c,"forEach",e)}catch(p){c.forEach=e}}},"17c2":function(t,a,i){"use strict";var s=i("b727").forEach,n=i("a640"),e=i("ae40"),o=n("forEach"),l=e("forEach");t.exports=o&&l?[].forEach:function(t){return s(this,t,arguments.length>1?arguments[1]:void 0)}},"1dde":function(t,a,i){var s=i("d039"),n=i("b622"),e=i("2d00"),o=n("species");t.exports=function(t){return e>=51||!s((function(){var a=[],i=a.constructor={};return i[o]=function(){return{foo:1}},1!==a[t](Boolean).foo}))}},4160:function(t,a,i){"use strict";var s=i("23e7"),n=i("17c2");s({target:"Array",proto:!0,forced:[].forEach!=n},{forEach:n})},"65f0":function(t,a,i){var s=i("861d"),n=i("e8b5"),e=i("b622"),o=e("species");t.exports=function(t,a){var i;return n(t)&&(i=t.constructor,"function"!=typeof i||i!==Array&&!n(i.prototype)?s(i)&&(i=i[o],null===i&&(i=void 0)):i=void 0),new(void 0===i?Array:i)(0===a?0:a)}},"7db0":function(t,a,i){"use strict";var s=i("23e7"),n=i("b727").find,e=i("44d2"),o=i("ae40"),l="find",r=!0,c=o(l);l in[]&&Array(1)[l]((function(){r=!1})),s({target:"Array",proto:!0,forced:r||!c},{find:function(t){return n(this,t,arguments.length>1?arguments[1]:void 0)}}),e(l)},8418:function(t,a,i){"use strict";var s=i("c04e"),n=i("9bf2"),e=i("5c6c");t.exports=function(t,a,i){var o=s(a);o in t?n.f(t,o,e(0,i)):t[o]=i}},"8bf3":function(t,a,i){"use strict";i.r(a);var s=function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("div",{staticStyle:{"margin-top":"50px"}},[i("leetcode-article"),t._e()],1)},n=[],e=(i("7db0"),i("4160"),i("b0c0"),i("159b"),i("1487")),o=i.n(e);i("2c43"),i("fb6a"),i("dca8");function l(t,a){return a||(a=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(a)}}))}var r=i("d4cd"),c=i.n(r);function p(){var t=l(["\n  ```js\n  function sum(n) {\n    let res = 0;\n    for (let i = 0; i < n; i++) {\n      res += i;\n    }\n    return res;\n  }\n  \n  ```\n            "],["\n  \\`\\`\\`js\n  function sum(n) {\n    let res = 0;\n    for (let i = 0; i < n; i++) {\n      res += i;\n    }\n    return res;\n  }\n  \n  \\`\\`\\`\n            "]);return p=function(){return t},t}function d(){var t=l(["\n  ```c++\n  int sum(int n) {\n    int res = 0;\n    for (int i = 0; i < n; i++) {\n      res += i;\n    }\n    return res;\n  }\n  \n  ```\n  \n            "],["\n  \\`\\`\\`c++\n  int sum(int n) {\n    int res = 0;\n    for (int i = 0; i < n; i++) {\n      res += i;\n    }\n    return res;\n  }\n  \n  \\`\\`\\`\n  \n            "]);return d=function(){return t},t}function g(){var t=l(["\n  ```java\n  class Solution {\n    public int sum(int n) {\n      int res = 0;\n      for (int i = 0; i < n; i++) {\n        res += i;\n      }\n      return res;\n    }\n  }\n  ```\n            "],["\n  \\`\\`\\`java\n  class Solution {\n    public int sum(int n) {\n      int res = 0;\n      for (int i = 0; i < n; i++) {\n        res += i;\n      }\n      return res;\n    }\n  }\n  \\`\\`\\`\n            "]);return g=function(){return t},t}function h(){var t=l(["\n  ```python\n  def sum(n):\n      res = 0\n      for i in range(1, n + 1):\n          res += i\n      return res\n  ```\n        "],["\n  \\`\\`\\`python\n  def sum(n):\n      res = 0\n      for i in range(1, n + 1):\n          res += i\n      return res\n  \\`\\`\\`\n        "]);return h=function(){return t},t}function u(){var t=l(["\n  ```js\n  function sum(n) {\n    let res = 0;\n    for (let i = 0; i < n; i++) {\n      res += i;\n    }\n    return res;\n  }\n  \n  ```\n            "],["\n  \\`\\`\\`js\n  function sum(n) {\n    let res = 0;\n    for (let i = 0; i < n; i++) {\n      res += i;\n    }\n    return res;\n  }\n  \n  \\`\\`\\`\n            "]);return u=function(){return t},t}function m(){var t=l(["\n  ```c++\n  int sum(int n) {\n    int res = 0;\n    for (int i = 0; i < n; i++) {\n      res += i;\n    }\n    return res;\n  }\n  \n  ```\n  \n            "],["\n  \\`\\`\\`c++\n  int sum(int n) {\n    int res = 0;\n    for (int i = 0; i < n; i++) {\n      res += i;\n    }\n    return res;\n  }\n  \n  \\`\\`\\`\n  \n            "]);return m=function(){return t},t}function x(){var t=l(["\n  ```java\n  class Solution {\n    public int sum(int n) {\n      int res = 0;\n      for (int i = 0; i < n; i++) {\n        res += i;\n      }\n      return res;\n    }\n  }\n  ```\n            "],["\n  \\`\\`\\`java\n  class Solution {\n    public int sum(int n) {\n      int res = 0;\n      for (int i = 0; i < n; i++) {\n        res += i;\n      }\n      return res;\n    }\n  }\n  \\`\\`\\`\n            "]);return x=function(){return t},t}function y(){var t=l(["\n  ```python\n  def sum(n):\n      res = 0\n      for i in range(1, n + 1):\n          res += i\n      return res\n  ```\n        "],["\n  \\`\\`\\`python\n  def sum(n):\n      res = 0\n      for i in range(1, n + 1):\n          res += i\n      return res\n  \\`\\`\\`\n        "]);return y=function(){return t},t}var f=new c.a;function b(t){return f.render(t[0])}var v=[{id:"01",name:"第一章",list:[{title:"代码1.1.1",codes:[{language:"Python",content:b(y())},{language:"Java",content:b(x())},{language:"C++",content:b(m())},{language:"JavaScript",content:b(u())}]},{title:"代码1.1.2",codes:[{language:"Python",content:b(h())},{language:"Java",content:b(g())},{language:"C++",content:b(d())},{language:"JavaScript",content:b(p())}]}]},{id:"02",name:"第二章"},{id:"03",name:"第三章"},{id:"04",name:"第四章"},{id:"05",name:"第五章"},{id:"06",name:"第六章"},{id:"07",name:"第七章"},{id:"08",name:"第八章"},{id:"09",name:"第九章"},{id:"10",name:"第十章"},{id:"11",name:"第十一章"},{id:"12",name:"第十二章"},{id:"13",name:"第十三章"},{id:"14",name:"第十四章"},{id:"15",name:"第十五章"},{id:"16",name:"第十六章"},{id:"17",name:"第十七章"},{id:"18",name:"第十八章"},{id:"19",name:"第十九章"},{id:"20",name:"第二十章"}],_=function(){var t=this,a=t.$createElement;t._self._c;return t._m(0)},S=[function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("section",{staticStyle:{"font-size":"16px",color:"black",padding:"0 10px","line-height":"1.6","word-spacing":"0px","letter-spacing":"0px","word-break":"break-word","word-wrap":"break-word","text-align":"left","font-family":"Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, 'PingFang SC', Cambria, Cochin, Georgia, Times, 'Times New Roman', serif","margin-top":"-10px"},attrs:{id:"nice","data-tool":"mdnice编辑器","data-website":"https://www.mdnice.com"}},[i("h1",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"24px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("或许是一本可以彻底改变你刷 LeetCode 效率的题解书")]),i("span",{staticClass:"suffix"})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 经过了半年时间打磨，投入诸多人力，这本 LeetCode 题解书终于快要和大家见面了。目前已经完成了大部分章节的编写工作，预计经过一段时间的打磨就会和大家见面啦 💐💐💐💐💐。 ")]),i("h1",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"24px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("背景")]),i("span",{staticClass:"suffix"})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 自 "),i("a",{staticStyle:{"text-decoration":"none","word-wrap":"break-word","font-weight":"bold",color:"rgb(239, 112, 96)","border-bottom":"1px solid rgb(239, 112, 96)"},attrs:{href:"https://github.com/azl397985856/leetcode"}},[t._v("LeetCode 题解")]),t._v(" （现在已经接近 30k star 了）项目被大家开始关注，就有不少出版社开始联系我写书。刚开始后的时候，我并没有这个打算，觉得写这个相对于博客形式的题解要耗费时间，且并不一定效果比博客形式的效果好。后来当我向大家提及“出版社找我写书”这件事情的时候，很多人表示“想要买书，于是我就开始打算写这样一本书。但是一个完全没有写书经验的人，独立完成一本书工作量还是蛮大的，因此我打算寻求其他志同道合人士的帮助。 ")]),i("h1",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"24px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("团队介绍")]),i("span",{staticClass:"suffix"})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 团队成员大都来自 985， 211 学校计算机系，大家经常参加算法竞赛，也坚持参加 LeetCode 周赛。在这个过程中，我们积累了很多经验，希望将这些经验分享给大家，以减少大家在刷题过程中的阻碍，让大家更有效率的刷题。 本书尤其适合那些刚刚开始刷题的人，如果你刚开始刷题，或者刷了很多题面对新题还是无法很好的解决，那么这本书肯定很适合你。最后欢迎大家加入我们的读者群和作者进行交流。 ")]),i("blockquote",{staticStyle:{display:"block","font-size":"0.9em",overflow:"auto","overflow-scrolling":"touch","border-left":"3px solid rgba(0, 0, 0, 0.4)",color:"#6a737d","padding-top":"10px","padding-bottom":"10px","padding-left":"20px","padding-right":"10px","margin-bottom":"20px","margin-top":"20px","border-left-color":"rgb(239, 112, 96)",background:"#fff9f9"},attrs:{"data-tool":"mdnice编辑器"}},[i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0px",color:"black","line-height":"26px"}},[t._v(" 读者群会在新书出版之后的第一时间开放。 ")])]),i("ul",{staticStyle:{"margin-top":"8px","margin-bottom":"8px","padding-left":"25px",color:"black","list-style-type":"disc"},attrs:{"data-tool":"mdnice编辑器"}},[i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[i("a",{staticStyle:{"text-decoration":"none","word-wrap":"break-word","font-weight":"bold",color:"rgb(239, 112, 96)","border-bottom":"1px solid rgb(239, 112, 96)"},attrs:{href:"https://leetcode-cn.com/u/hlxing/"}},[t._v("作者 - xing")])])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[i("a",{staticStyle:{"text-decoration":"none","word-wrap":"break-word","font-weight":"bold",color:"rgb(239, 112, 96)","border-bottom":"1px solid rgb(239, 112, 96)"},attrs:{href:"https://leetcode-cn.com/u/fe-lucifer/"}},[t._v("作者 - lucifer")])])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[i("a",{staticStyle:{"text-decoration":"none","word-wrap":"break-word","font-weight":"bold",color:"rgb(239, 112, 96)","border-bottom":"1px solid rgb(239, 112, 96)"},attrs:{href:"https://leetcode-cn.com/u/bruceyuj/"}},[t._v("作者 - BY")])])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[i("a",{staticStyle:{"text-decoration":"none","word-wrap":"break-word","font-weight":"bold",color:"rgb(239, 112, 96)","border-bottom":"1px solid rgb(239, 112, 96)"},attrs:{href:"https://www.fanlucloud.com/"}},[t._v("作者 - fanlu")])])])]),i("h1",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"24px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("样张")]),i("span",{staticClass:"suffix"})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 这里给大家开放部分章节内容给大家，让大家尝尝鲜。当然也欢迎大家提出宝贵的建议，帮助我们写出更好的内容。 ")]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 我们开放了第八章第五小节给大家看，以下是具体内容： ")]),i("h2",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","border-bottom":"2px solid rgb(239, 112, 96)","font-size":"1.3em"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content",staticStyle:{display:"inline-block","font-weight":"bold",background:"rgb(239, 112, 96)",color:"#ffffff",padding:"3px 10px 1px","border-top-right-radius":"3px","border-top-left-radius":"3px","margin-right":"3px"}},[t._v("8.5 1206. 设计跳表")]),i("span",{staticClass:"suffix"}),i("span",{staticStyle:{display:"inline-block","vertical-align":"bottom","border-bottom":"36px solid #efebe9","border-right":"20px solid transparent"}})]),i("h3",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"20px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("题目描述")]),i("span",{staticClass:"suffix",staticStyle:{display:"none"}})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 不使用任何库函数，设计一个跳表。 ")]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 跳表是在 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(logN)",alt:""}})])]),t._v(" 时间内完成增加、删除、搜索操作的数据结构。跳表相比于树堆与红黑树，其功能与性能相当，并且跳表的代码长度相较下更短，其设计思想与链表相似。 ")]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 跳表中有很多层，每一层是一个短的链表。在第一层的作用下，增加、删除和搜索操作的时间复杂度不超过 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(N)",alt:""}})])]),t._v("。跳表的每一个操作的平均时间复杂度是 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(logN)",alt:""}})])]),t._v("，空间复杂度是 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(N)",alt:""}})])]),t._v("。 ")]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 在本题中，你的设计应该要包含这些函数： ")]),i("ul",{staticStyle:{"margin-top":"8px","margin-bottom":"8px","padding-left":"25px",color:"black","list-style-type":"disc"},attrs:{"data-tool":"mdnice编辑器"}},[i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" bool search(int target) : 返回 target 是否存在于跳表中。 ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" void add(int num): 插入一个元素到跳表。 ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" bool erase(int num): 在跳表中删除一个值，如果 num 不存在，直接返回 false. 如果存在多个 num ，删除其中任意一个即可。 ")])])]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 注意，跳表中可能存在多个相同的值，你的代码需要处理这种情况。 ")]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 样例： ")]),i("pre",{staticClass:"custom",staticStyle:{"margin-top":"10px","margin-bottom":"10px"},attrs:{"data-tool":"mdnice编辑器"}},[i("code",{staticClass:"hljs",staticStyle:{"overflow-x":"auto",padding:"16px",color:"#abb2bf",background:"#282c34",display:"-webkit-box","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","border-radius":"0px","font-size":"12px","-webkit-overflow-scrolling":"touch"}},[t._v("Skiplist skiplist = new Skiplist();\n\nskiplist.add(1);\nskiplist.add(2);\nskiplist.add(3);\nskiplist.search(0);   // 返回 false\nskiplist.add(4);\nskiplist.search(1);   // 返回 true\nskiplist.erase(0);    // 返回 false，0 不在跳表中\nskiplist.erase(1);    // 返回 true\nskiplist.search(1);   // 返回 false，1 已被擦除\n")])]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 约束条件： "),i("code",{staticStyle:{"font-size":"14px","word-wrap":"break-word",padding:"2px 4px","border-radius":"4px",margin:"0 2px","background-color":"rgba(27,31,35,.05)","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","word-break":"break-all",color:"rgb(239, 112, 96)"}},[t._v("0 <= num, target <= 20000")]),t._v(" 最多调用 50000 次 search, add, 以及 erase 操作。 ")]),i("h3",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"20px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("思路")]),i("span",{staticClass:"suffix",staticStyle:{display:"none"}})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 首先，使用跳表会将数据存储成有序的。在数据结构当中，我们通常有两种基本的线性结构，结合有序数据，表达如下： ")]),i("ul",{staticStyle:{"margin-top":"8px","margin-bottom":"8px","padding-left":"25px",color:"black","list-style-type":"disc"},attrs:{"data-tool":"mdnice编辑器"}},[i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" 有序链表，我们有三种基本操作： "),i("ul",{staticStyle:{"margin-top":"8px","margin-bottom":"8px","padding-left":"25px",color:"black","list-style-type":"square"}},[i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" 查找指定的数据：时间复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(N)",alt:""}})])]),t._v(", "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=N",alt:""}})])]),t._v(" 为数据位于链表的位置。 ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" 插入指定的数据：时间复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(N)",alt:""}})])]),t._v(", "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=N",alt:""}})])]),t._v(" 为数据位于链表的位置。因为插入数据之前，需要先查找到可以插入的位置。 ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" 删除指定的数据：时间复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(N)",alt:""}})])]),t._v(", "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=N",alt:""}})])]),t._v(" 为数据位于链表的位置。因为删除数据之前，需要先查找到可以插入的位置。 ")])])])])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" 有序数组： "),i("ul",{staticStyle:{"margin-top":"8px","margin-bottom":"8px","padding-left":"25px",color:"black","list-style-type":"square"}},[i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" 查找指定的数据：如果使用二分查找，时间复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(logN)",alt:""}})])]),t._v(", "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=N",alt:""}})])]),t._v(" 为数据的个数。 ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" 插入指定的数据：时间复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(N)",alt:""}})])]),t._v(", 因为数组是顺序存储，插入新的数据时，我们需要向后移动指定位置后面的数据，这里 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=N",alt:""}})])]),t._v(" 为数据的个数。 ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" 删除指定的数据：时间复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(N)",alt:""}})])]),t._v(", 因为数组是顺序存储，删除数据时，我们需要向前移动指定位置后面的数据，这里 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=N",alt:""}})])]),t._v(" 为数据的个数。 ")])])])])])]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 而神奇的跳表能够在 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(logN)",alt:""}})])]),t._v(" 时间内完成增加、删除、搜索操作。 下面我们分别分析增加、删除和搜索这 3 个三个基本操作。 ")]),i("h4",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"18px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("跳表的查找")]),i("span",{staticClass:"suffix",staticStyle:{display:"none"}})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 现在我们通过一个简单的例子来描述跳表是如何实现的。假设我们有一个有序链表如下图： "),i("img",{staticStyle:{display:"block",margin:"0 auto",width:"auto","max-width":"100%"},attrs:{src:"https://tva1.sinaimg.cn/large/00831rSTly1gdl834i5t2j33340ecdil.jpg",alt:""}}),t._v(" 原始方法中，查找的时间复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(N)",alt:""}})])]),t._v("。那么如何来提高链表的查询效率呢？ 如下图所示，我们可以从原始链表中每两个元素抽出来一个元素，加上一级索引，并且一级索引指向原始链表： "),i("img",{staticStyle:{display:"block",margin:"0 auto",width:"auto","max-width":"100%"},attrs:{src:"https://tva1.sinaimg.cn/large/00831rSTly1gdl81x0d7vj33340rbwjx.jpg",alt:""}}),t._v(" 如果我们想要查找 9 ，在原始链表中查找路径是 "),i("code",{staticStyle:{"font-size":"14px","word-wrap":"break-word",padding:"2px 4px","border-radius":"4px",margin:"0 2px","background-color":"rgba(27,31,35,.05)","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","word-break":"break-all",color:"rgb(239, 112, 96)"}},[t._v("1->3->4->7->9")]),t._v(", 而在添加了一级索引的查找路径是 "),i("code",{staticStyle:{"font-size":"14px","word-wrap":"break-word",padding:"2px 4px","border-radius":"4px",margin:"0 2px","background-color":"rgba(27,31,35,.05)","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","word-break":"break-all",color:"rgb(239, 112, 96)"}},[t._v("1->4->9")]),t._v("，很明显，查找效率提升了。 按照这样的思路，我们在第 1 级索引上再加第 2 级索引，再加第 3 级索引，以此类推，这样在数据量非常大的时候，使得我们查找数据的时间复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(logN)",alt:""}})])]),t._v("。这就是跳表的思想，也就是我们通常所说的“空间换时间”。 ")]),i("h4",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"18px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("跳表的插入")]),i("span",{staticClass:"suffix",staticStyle:{display:"none"}})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 跳表插入数据看起来很简单，我们需要保持数据有序，因此，第一步我们需要像查找元素一样，找到新元素应该插入的位置，然后再插入。 ")]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 但是这样会存在一个问题，如果我们一直往原始链表中插入数据，但是不更新索引，那么会导致两个索引结点之间的数据非常多，在极端情况下，跳表会退化成单链表，从而导致查找效率由 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(logN)",alt:""}})])]),t._v(" 退化为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(N)",alt:""}})])]),t._v("。因此，我们需要在插入数据的同时，增加相应的索引或者重建索引。 ")]),i("ol",{staticStyle:{"margin-top":"8px","margin-bottom":"8px","padding-left":"25px",color:"black","list-style-type":"decimal"},attrs:{"data-tool":"mdnice编辑器"}},[i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" 方案 1：每次插入数据后，将跳表的索引全部删除后重建，我们知道索引的结点个数为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=N",alt:""}})])]),t._v("（在空间复杂度分析时会有明确的数学推导），那么每次重建索引，重建的时间复杂度至少是 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(N)",alt:""}})])]),t._v(" 级别，很明显不可取。 ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" 方案 2：通过随机性来维护索引。假设跳表的每一层的提升概率为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{1}{2}",alt:""}})])]),t._v(" ，最理想的情况就是每两个元素提升一个元素做索引。而通常意义上，只要元素的数量足够多，且抽取足够随机的话，我们得到的索引将会是比较均匀的。尽管不是每两个抽取一个，但是对于查找效率来讲，影响并不很大。我们要知道，设计良好的数据结构往往都是用来应对大数据量的场景的。 因此，我们这样维护索引："),i("strong",{staticStyle:{"font-weight":"bold",color:"black"}},[t._v("随机抽取 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{N}{2}",alt:""}})])]),t._v(" 个元素作为 1 级索引，随机抽取 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{N}{4}",alt:""}})])]),t._v(" 作为 2 级索引，以此类推，一直到最顶层索引")]),t._v("。 ")])])]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 那么具体代码该如何实现，才能够让跳表在每次插入新元素时，尽量让该元素有 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{1}{2}",alt:""}})])]),t._v(" 的概率建立一级索引、"),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{1}{4}",alt:""}})])]),t._v(" 的概率建立二级索引、"),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{1}{8}",alt:""}})])]),t._v(" 的概率建立三级索引，以此类推。因此，我们需要一个概率算法。 ")]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 在通常的跳表实现当中，我们会设计一个 "),i("code",{staticStyle:{"font-size":"14px","word-wrap":"break-word",padding:"2px 4px","border-radius":"4px",margin:"0 2px","background-color":"rgba(27,31,35,.05)","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","word-break":"break-all",color:"rgb(239, 112, 96)"}},[t._v("randomLevel()")]),t._v(" 方法，该方法会随机生成 "),i("code",{staticStyle:{"font-size":"14px","word-wrap":"break-word",padding:"2px 4px","border-radius":"4px",margin:"0 2px","background-color":"rgba(27,31,35,.05)","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","word-break":"break-all",color:"rgb(239, 112, 96)"}},[t._v("1~MAX_LEVEL")]),t._v(" 之间的数 (MAX_LEVEL 表示索引的最高层数） ")]),i("ul",{staticStyle:{"margin-top":"8px","margin-bottom":"8px","padding-left":"25px",color:"black","list-style-type":"disc"},attrs:{"data-tool":"mdnice编辑器"}},[i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" randomLevel() 方法返回 1 表示当前插入的元素不需要建立索引，只需要存储数据到原始链表即可（概率 1/2） ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" randomLevel() 方法返回 2 表示当前插入的元素需要建立一级索引（概率 1/4） ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" randomLevel() 方法返回 3 表示当前插入的元素需要建立二级索引（概率 1/8） ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" randomLevel() 方法返回 4 表示当前插入的元素需要建立三级索引（概率 1/16） ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" ...... ")])])]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 可能有的同学会有疑问，我们需要一级索引中元素的个数时原始链表的一半，但是我们 "),i("code",{staticStyle:{"font-size":"14px","word-wrap":"break-word",padding:"2px 4px","border-radius":"4px",margin:"0 2px","background-color":"rgba(27,31,35,.05)","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","word-break":"break-all",color:"rgb(239, 112, 96)"}},[t._v("randomLevel()")]),t._v(" 方法返回 2（建立一级索引）的概率是 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{1}{4}",alt:""}})])]),t._v(", 这样是不是有问题呢？ 实际上，只要"),i("code",{staticStyle:{"font-size":"14px","word-wrap":"break-word",padding:"2px 4px","border-radius":"4px",margin:"0 2px","background-color":"rgba(27,31,35,.05)","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","word-break":"break-all",color:"rgb(239, 112, 96)"}},[t._v("randomLevel()")]),t._v("方法返回的数大于 1，我们都会建立一级索引，而返回值为 1 的概率是 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{1}{2}",alt:""}})])]),t._v("。所以，建立一级索引的概率其实是"),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=1- \\frac{1}{2} = \\frac{1}{2}",alt:""}})])]),t._v("。同上，当 "),i("code",{staticStyle:{"font-size":"14px","word-wrap":"break-word",padding:"2px 4px","border-radius":"4px",margin:"0 2px","background-color":"rgba(27,31,35,.05)","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","word-break":"break-all",color:"rgb(239, 112, 96)"}},[t._v("randomLevel()")]),t._v(" 方法返回值 "),i("code",{staticStyle:{"font-size":"14px","word-wrap":"break-word",padding:"2px 4px","border-radius":"4px",margin:"0 2px","background-color":"rgba(27,31,35,.05)","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","word-break":"break-all",color:"rgb(239, 112, 96)"}},[t._v(">2")]),t._v(" 时，我们会建立二级或二级以上的索引，都会在二级索引中添加元素。而在二级索引中添加元素的概率是 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=1- \\frac{1}{2} - \\frac{1}{4} = \\frac{1}{4}",alt:""}})])]),t._v("。 以此类推，我们推导出 "),i("code",{staticStyle:{"font-size":"14px","word-wrap":"break-word",padding:"2px 4px","border-radius":"4px",margin:"0 2px","background-color":"rgba(27,31,35,.05)","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","word-break":"break-all",color:"rgb(239, 112, 96)"}},[t._v("randomLevel()")]),t._v(" 符合我们的设计要求。 ")]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 下面我们通过仿照 redis zset.c 的 "),i("code",{staticStyle:{"font-size":"14px","word-wrap":"break-word",padding:"2px 4px","border-radius":"4px",margin:"0 2px","background-color":"rgba(27,31,35,.05)","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","word-break":"break-all",color:"rgb(239, 112, 96)"}},[t._v("randomLevel")]),t._v(" 的代码： ")]),i("pre",{staticClass:"custom",staticStyle:{"margin-top":"10px","margin-bottom":"10px"},attrs:{"data-tool":"mdnice编辑器"}},[i("code",{staticClass:"hljs",staticStyle:{"overflow-x":"auto",padding:"16px",color:"#abb2bf",background:"#282c34",display:"-webkit-box","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","border-radius":"0px","font-size":"12px","-webkit-overflow-scrolling":"touch"}},[i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("##")]),i("br"),i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("# 1. SKIPLIST_P 为提升的概率，本案例中我们设置为 1/2, 如果我们想要节省空间利用效率，可以适当的降低该值，从而减少索引元素个数。在 redis 中 SKIPLIST_P 被设定为 0.25。")]),i("br"),i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("# 2. redis 中通过使用位运算来提升浮点数比较的效率，在本案例中被简化")]),i("br"),i("span",{staticClass:"hljs-function",staticStyle:{"line-height":"26px"}},[i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("def")]),t._v(" "),i("span",{staticClass:"hljs-title",staticStyle:{color:"#61aeee","line-height":"26px"}},[t._v("randomLevel")]),i("span",{staticClass:"hljs-params",staticStyle:{"line-height":"26px"}},[t._v("()")]),t._v(":")]),i("br"),t._v("    level = "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("1")]),i("br"),t._v("    "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("while")]),t._v(" random() < SKIPLIST_P "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("and")]),t._v(" level < MAX_LEVEL:"),i("br"),t._v("        level += "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("1")]),i("br"),t._v("    "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("return")]),t._v(" level"),i("br")])]),i("h4",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"18px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("跳表的删除")]),i("span",{staticClass:"suffix",staticStyle:{display:"none"}})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 跳表的删除相对来讲稍微简单一些。我们在删除数据的同时，需要删除对应的索引结点。 ")]),i("h3",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"20px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("代码")]),i("span",{staticClass:"suffix",staticStyle:{display:"none"}})]),i("pre",{staticClass:"custom",staticStyle:{"margin-top":"10px","margin-bottom":"10px"},attrs:{"data-tool":"mdnice编辑器"}},[i("code",{staticClass:"hljs",staticStyle:{"overflow-x":"auto",padding:"16px",color:"#abb2bf",background:"#282c34",display:"-webkit-box","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","border-radius":"0px","font-size":"12px","-webkit-overflow-scrolling":"touch"}},[i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("from")]),t._v(" typing "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("import")]),t._v(" Optional"),i("br"),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("import")]),t._v(" random"),i("br"),i("br"),i("span",{staticClass:"hljs-class",staticStyle:{"line-height":"26px"}},[i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("class")]),t._v(" "),i("span",{staticClass:"hljs-title",staticStyle:{color:"#e6c07b","line-height":"26px"}},[t._v("ListNode")]),t._v(":")]),i("br"),t._v("    "),i("span",{staticClass:"hljs-function",staticStyle:{"line-height":"26px"}},[i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("def")]),t._v(" "),i("span",{staticClass:"hljs-title",staticStyle:{color:"#61aeee","line-height":"26px"}},[t._v("__init__")]),i("span",{staticClass:"hljs-params",staticStyle:{"line-height":"26px"}},[t._v("(self, data: Optional[int] = None)")]),t._v(":")]),i("br"),t._v("        self._data = data "),i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("# 链表结点的数据域，可以为空（目的是方便创建头节点）")]),i("br"),t._v("        self._forwards = [] "),i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("# 存储各个索引层级中该结点的后驱索引结点")]),i("br"),i("br"),i("span",{staticClass:"hljs-class",staticStyle:{"line-height":"26px"}},[i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("class")]),t._v(" "),i("span",{staticClass:"hljs-title",staticStyle:{color:"#e6c07b","line-height":"26px"}},[t._v("Skiplist")]),t._v(":")]),i("br"),i("br"),t._v("    _MAX_LEVEL = "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("16")]),t._v(" "),i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("# 允许的最大索引高度，该值根据实际需求设置")]),i("br"),i("br"),t._v("    "),i("span",{staticClass:"hljs-function",staticStyle:{"line-height":"26px"}},[i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("def")]),t._v(" "),i("span",{staticClass:"hljs-title",staticStyle:{color:"#61aeee","line-height":"26px"}},[t._v("__init__")]),i("span",{staticClass:"hljs-params",staticStyle:{"line-height":"26px"}},[t._v("(self)")]),t._v(":")]),i("br"),t._v("        self._level_count = "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("1")]),t._v(" "),i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("# 初始化当前层级为 1")]),i("br"),t._v("        self._head = ListNode()"),i("br"),t._v("        self._head._forwards = ["),i("span",{staticClass:"hljs-literal",staticStyle:{color:"#56b6c2","line-height":"26px"}},[t._v("None")]),t._v("] * self._MAX_LEVEL"),i("br"),i("br"),t._v("    "),i("span",{staticClass:"hljs-function",staticStyle:{"line-height":"26px"}},[i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("def")]),t._v(" "),i("span",{staticClass:"hljs-title",staticStyle:{color:"#61aeee","line-height":"26px"}},[t._v("search")]),i("span",{staticClass:"hljs-params",staticStyle:{"line-height":"26px"}},[t._v("(self, target: int)")]),t._v(" -> bool:")]),i("br"),t._v("        p = self._head"),i("br"),t._v("        "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("for")]),t._v(" i "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("in")]),t._v(" range(self._level_count - "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("1")]),t._v(", "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("-1")]),t._v(", "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("-1")]),t._v("): "),i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("# 从最高索引层级不断搜索，如果当前层级没有，则下沉到低一级的层级")]),i("br"),t._v("            "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("while")]),t._v(" p._forwards[i] "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("and")]),t._v(" p._forwards[i]._data < target:"),i("br"),t._v("                p = p._forwards[i]"),i("br"),i("br"),t._v("        "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("if")]),t._v(" p._forwards["),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("0")]),t._v("] "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("and")]),t._v(" p._forwards["),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("0")]),t._v("]._data == target:"),i("br"),t._v("            "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("return")]),t._v(" "),i("span",{staticClass:"hljs-literal",staticStyle:{color:"#56b6c2","line-height":"26px"}},[t._v("True")]),i("br"),i("br"),t._v("        "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("return")]),t._v(" "),i("span",{staticClass:"hljs-literal",staticStyle:{color:"#56b6c2","line-height":"26px"}},[t._v("False")]),i("br"),i("br"),t._v("    "),i("span",{staticClass:"hljs-function",staticStyle:{"line-height":"26px"}},[i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("def")]),t._v(" "),i("span",{staticClass:"hljs-title",staticStyle:{color:"#61aeee","line-height":"26px"}},[t._v("add")]),i("span",{staticClass:"hljs-params",staticStyle:{"line-height":"26px"}},[t._v("(self, num: int)")]),t._v(" -> "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("None")]),t._v(":")]),i("br"),t._v("        level = self._random_level() "),i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("# 随机生成索引层级")]),i("br"),t._v("        "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("if")]),t._v(" self._level_count < level: "),i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("# 如果当前层级小于 level, 则更新当前最高层级")]),i("br"),t._v("            self._level_count = level"),i("br"),t._v("        new_node = ListNode(num) "),i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("# 生成新结点")]),i("br"),t._v("        new_node._forwards = ["),i("span",{staticClass:"hljs-literal",staticStyle:{color:"#56b6c2","line-height":"26px"}},[t._v("None")]),t._v("] * level"),i("br"),t._v("        update = [self._head] * self._level_count "),i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("# 用来保存各个索引层级插入的位置，也就是新结点的前驱结点")]),i("br"),i("br"),t._v("        p = self._head"),i("br"),t._v("        "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("for")]),t._v(" i "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("in")]),t._v(" range(self._level_count - "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("1")]),t._v(", "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("-1")]),t._v(", "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("-1")]),t._v("): "),i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("# 整段代码获取新插入结点在各个索引层级的前驱节点，需要注意的是这里是使用的当前最高层级来循环。")]),i("br"),t._v("            "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("while")]),t._v(" p._forwards[i] "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("and")]),t._v(" p._forwards[i]._data < num:"),i("br"),t._v("                p = p._forwards[i]"),i("br"),i("br"),t._v("            update[i] = p"),i("br"),i("br"),t._v("        "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("for")]),t._v(" i "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("in")]),t._v(" range(level): "),i("span",{staticClass:"hljs-comment",staticStyle:{color:"#5c6370","font-style":"italic","line-height":"26px"}},[t._v("# 更新需要更新的各个索引层级")]),i("br"),t._v("            new_node._forwards[i] = update[i]._forwards[i]"),i("br"),t._v("            update[i]._forwards[i] = new_node"),i("br"),i("br"),t._v("    "),i("span",{staticClass:"hljs-function",staticStyle:{"line-height":"26px"}},[i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("def")]),t._v(" "),i("span",{staticClass:"hljs-title",staticStyle:{color:"#61aeee","line-height":"26px"}},[t._v("erase")]),i("span",{staticClass:"hljs-params",staticStyle:{"line-height":"26px"}},[t._v("(self, num: int)")]),t._v(" -> bool:")]),i("br"),t._v("        update = ["),i("span",{staticClass:"hljs-literal",staticStyle:{color:"#56b6c2","line-height":"26px"}},[t._v("None")]),t._v("] * self._level_count"),i("br"),t._v("        p = self._head"),i("br"),t._v("        "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("for")]),t._v(" i "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("in")]),t._v(" range(self._level_count - "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("1")]),t._v(", "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("-1")]),t._v(", "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("-1")]),t._v("):"),i("br"),t._v("            "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("while")]),t._v(" p._forwards[i] "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("and")]),t._v(" p._forwards[i]._data < num:"),i("br"),t._v("                p = p._forwards[i]"),i("br"),t._v("            update[i] = p"),i("br"),i("br"),t._v("        "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("if")]),t._v(" p._forwards["),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("0")]),t._v("] "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("and")]),t._v(" p._forwards["),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("0")]),t._v("]._data == num:"),i("br"),t._v("            "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("for")]),t._v(" i "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("in")]),t._v(" range(self._level_count - "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("1")]),t._v(", "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("-1")]),t._v(", "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("-1")]),t._v("):"),i("br"),t._v("                "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("if")]),t._v(" update[i]._forwards[i] "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("and")]),t._v(" update[i]._forwards[i]._data == num:"),i("br"),t._v("                    update[i]._forwards[i] = update[i]._forwards[i]._forwards[i]"),i("br"),t._v("            "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("return")]),t._v(" "),i("span",{staticClass:"hljs-literal",staticStyle:{color:"#56b6c2","line-height":"26px"}},[t._v("True")]),i("br"),i("br"),t._v("        "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("while")]),t._v(" self._level_count > "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("1")]),t._v(" "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("and")]),t._v(" "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("not")]),t._v(" self._head._forwards[self._level_count]:"),i("br"),t._v("            self._level_count -= "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("1")]),i("br"),i("br"),t._v("        "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("return")]),t._v(" "),i("span",{staticClass:"hljs-literal",staticStyle:{color:"#56b6c2","line-height":"26px"}},[t._v("False")]),i("br"),i("br"),t._v("    "),i("span",{staticClass:"hljs-function",staticStyle:{"line-height":"26px"}},[i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("def")]),t._v(" "),i("span",{staticClass:"hljs-title",staticStyle:{color:"#61aeee","line-height":"26px"}},[t._v("_random_level")]),i("span",{staticClass:"hljs-params",staticStyle:{"line-height":"26px"}},[t._v("(self, p: float = "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("0.5")]),t._v(")")]),t._v(" -> int:")]),i("br"),t._v("        level = "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("1")]),i("br"),t._v("        "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("while")]),t._v(" random.random() < p "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("and")]),t._v(" level < self._MAX_LEVEL:"),i("br"),t._v("            level += "),i("span",{staticClass:"hljs-number",staticStyle:{color:"#d19a66","line-height":"26px"}},[t._v("1")]),i("br"),t._v("        "),i("span",{staticClass:"hljs-keyword",staticStyle:{color:"#c678dd","line-height":"26px"}},[t._v("return")]),t._v(" level"),i("br")])]),i("h3",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"20px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("复杂度分析")]),i("span",{staticClass:"suffix",staticStyle:{display:"none"}})]),i("h4",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"18px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("空间复杂度")]),i("span",{staticClass:"suffix",staticStyle:{display:"none"}})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 跳表通过建立索引提高查找的效率，是典型的“空间换时间”的思想，那么空间复杂度到底是多少呢？ 我们假设原始链表有 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=N",alt:""}})])]),t._v(" 个元素，一级索引有 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{N}{2}",alt:""}})])]),t._v("，二级索引有 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{N}{4}",alt:""}})])]),t._v("，k 级索引有 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{N}{2^k}",alt:""}})])]),t._v(" 个元素，而最高级索引一般有 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=2",alt:""}})])]),t._v(" 个元素。所以，索引结点的总和是 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{N}{2} + \\frac{N}{2^2} + \\frac{N}{2^3}+...+ 2 \\approx N-2",alt:""}})])]),t._v(" ，因此可以得出空间复杂度是 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(N)",alt:""}})])]),t._v(", "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=N",alt:""}})])]),t._v(" 是原始链表的长度。 ")]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 上面的假设前提是每两个结点抽出一个结点到上层索引。那么如果我们每三个结点抽出一个结点到上层索引，那么索引总和就是 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{N}{3} + \\frac{N}{3^2} + \\frac{N}{3^3} + 9 + 3 + 1 \\approx \\frac{N}{2}",alt:""}})])]),t._v(", 额外空间减少了一半。因此我们可以通过减少索引的数量来减少空间复杂度，但是相应的会带来查找效率一定的下降。而具体这个阈值该如何选择，则要看具体的应用场景。 ")]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 另外需要注意的是，在实际的应用当中，索引结点往往不需要存储完整的对象，只需要存储对象的 key 和对应的指针即可。因此当对象比索引结点占用空间大很多时，索引结点所占的额外空间（相对原始数据来讲）又可以忽略不计了。 ")]),i("h4",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"18px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("时间复杂度")]),i("span",{staticClass:"suffix",staticStyle:{display:"none"}})]),i("h5",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"16px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("查找的时间复杂度")]),i("span",{staticClass:"suffix",staticStyle:{display:"none"}})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 来看看时间复杂度 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(logN)",alt:""}})])]),t._v(" 是如何推导出来的，首先我们看下图： "),i("img",{staticStyle:{display:"block",margin:"0 auto",width:"auto","max-width":"100%"},attrs:{src:"https://tva1.sinaimg.cn/large/00831rSTly1gdl82ermgfj31rr0rs77h.jpg",alt:""}})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 如上图所示，此处我们假设每两个结点会抽出一个结点来作为上一级索引的结点。也就是说，原始链表有 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=N",alt:""}})])]),t._v(" 个元素，一级索引有 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{N}{2}",alt:""}})])]),t._v("，二级索引有 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{N}{4}",alt:""}})])]),t._v("，k 级索引有 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=\\frac{N}{2^k}",alt:""}})])]),t._v(" 个元素，而最高级索引一般有 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=2",alt:""}})])]),t._v(" 个元素。 也就是说：最高级索引 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=x",alt:""}})])]),t._v(" 满足 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=2 = N/2^x",alt:""}})])]),t._v(", 由此公式可以得出 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=x = \\log_2(N)-1",alt:""}})])]),t._v(" , 加上原始数据这一层， 跳表的总高度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=h = \\log_2(N)",alt:""}})])]),t._v("。 那么，我们在查找过程中每一层索引最多遍历几个元素呢？从图中我们可以看出来每一层最多需要遍历 3 个结点。 因此，由公式 "),i("code",{staticStyle:{"font-size":"14px","word-wrap":"break-word",padding:"2px 4px","border-radius":"4px",margin:"0 2px","background-color":"rgba(27,31,35,.05)","font-family":"Operator Mono, Consolas, Monaco, Menlo, monospace","word-break":"break-all",color:"rgb(239, 112, 96)"}},[t._v("时间复杂度 = 索引高度*每层索引遍历元素个数")]),t._v("， 可以得出跳表中查找一个元素的时间复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(3 \\times \\log(N))",alt:""}})])]),t._v("，省略常数即为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(\\log(N))",alt:""}})])]),t._v("。 ")]),i("h5",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"16px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("插入的时间复杂度")]),i("span",{staticClass:"suffix",staticStyle:{display:"none"}})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 跳表的插入分为两部分操作： ")]),i("ol",{staticStyle:{"margin-top":"8px","margin-bottom":"8px","padding-left":"25px",color:"black","list-style-type":"decimal"},attrs:{"data-tool":"mdnice编辑器"}},[i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" 寻找到对应的位置，时间复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(logN)",alt:""}})])]),t._v(", "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=N",alt:""}})])]),t._v(" 为链表长度。 ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" 插入数据。我们在前面已经推导出跳表索引的高度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=logN",alt:""}})])]),t._v("。 因此，我们将数据插入到各层索引中的最坏时间复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(logN)",alt:""}})])]),t._v("。 ")])])]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 综上所述，插入操作的时间复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(logN)",alt:""}})])])]),i("h5",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"16px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("删除的时间复杂度")]),i("span",{staticClass:"suffix",staticStyle:{display:"none"}})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 跳表的删除操作和查找类似，只是需要在查找后删除对应的元素。查找操作的时间复杂度是 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=logN",alt:""}})])]),t._v("。那么后面删除部分代码的时间复杂度是多少呢？我们知道在跳表中，每一层索引都是一个有序的单链表，而删除单个元素的复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(1)",alt:""}})])]),t._v(", 索引层数为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=logN",alt:""}})])]),t._v("，因此删除部分代码的时间复杂度为"),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=logN",alt:""}})])]),t._v("。那么删除操作的总时间复杂度为- "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(logN) + O(logN) = 2O(logN)",alt:""}})])]),t._v("。我们忽略常数部分，删除元素的时间复杂度为 "),i("span",{staticClass:"span-inline-equation",staticStyle:{cursor:"pointer"}},[i("span",[i("img",{staticClass:"equation",staticStyle:{margin:"0 auto",width:"auto","max-width":"100%",display:"inline"},attrs:{src:"https://juejin.im/equation?tex=O(logN)",alt:""}})])]),t._v("。 ")]),i("h3",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"20px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("扩展")]),i("span",{staticClass:"suffix",staticStyle:{display:"none"}})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 在工业上，使用跳表的场景很多，下面做些简单的介绍，有兴趣的可以深入了解： ")]),i("ol",{staticStyle:{"margin-top":"8px","margin-bottom":"8px","padding-left":"25px",color:"black","list-style-type":"decimal"},attrs:{"data-tool":"mdnice编辑器"}},[i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" redis 当中 zset 使用了跳表 ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" HBase MemStore 当中使用了跳表 ")])]),i("li",[i("section",{staticStyle:{"margin-top":"5px","margin-bottom":"5px","line-height":"26px","text-align":"left",color:"rgb(1,1,1)","font-weight":"500"}},[t._v(" LevelDB 和 RocksDB 都是 LSM Tree 结构的数据库，内部的 MemTable 当中都使用了跳表 ")])])]),i("h1",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"24px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("配套网站")]),i("span",{staticClass:"suffix"})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 等新书发布之后，我们会在官网开辟一个区域，大家可以直接访问查看本书配套的配套代码，包括 JavaScript，Java，Python 和 C++。 也欢迎大家留言给我们自己想要支持的语言，我们会郑重考虑大家的意见。 ")]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 效果大概是这样的： ")]),i("figure",{staticStyle:{margin:"0","margin-top":"10px","margin-bottom":"10px"},attrs:{"data-tool":"mdnice编辑器"}},[i("img",{staticStyle:{display:"block",margin:"0 auto",width:"auto","max-width":"100%"},attrs:{src:"https://tva1.sinaimg.cn/large/00831rSTly1gdl80ojj2rj31tw0u00x1.jpg",alt:""}})]),i("h1",{staticStyle:{"margin-top":"30px","margin-bottom":"15px","font-weight":"bold",color:"black","font-size":"24px"},attrs:{"data-tool":"mdnice编辑器"}},[i("span",{staticClass:"prefix",staticStyle:{display:"none"}}),i("span",{staticClass:"content"},[t._v("预定")]),i("span",{staticClass:"suffix"})]),i("p",{staticStyle:{"font-size":"16px","padding-top":"8px","padding-bottom":"8px",margin:"0","line-height":"26px",color:"black"},attrs:{"data-tool":"mdnice编辑器"}},[t._v(" 如果你也想要第一时间获取到我们的题解新书，那么请发送邮件到 azl397985856@gmail.com，标题著明“书籍《LeetCode 题解》预定”字样。 ")])])}],w=i("2877"),C={},j=Object(w["a"])(C,_,S,!1,null,null,null),k=j.exports,q={components:{"leetcode-article":k},data:function(){return{block:{},selctedChapterId:"",selctedChapterLabel:"请选择章节",blocks:v}},created:function(){this.selctedChapterId="01",this.selctedChapterLabel="第一章"},methods:{handleLanguageChange:function(){this.$nextTick((function(){return document.querySelectorAll("code").forEach(o.a.highlightBlock)}))},handleCHchange:function(t){var a=t.id,i=t.name;this.selctedChapterId=a,this.selctedChapterLabel=i,this.handleLanguageChange()}},watch:{selctedChapterId:function(t){this.block=v.find((function(a){return a.id===t}))}}},z=q,N=(i("cd76"),Object(w["a"])(z,s,n,!1,null,"c611ed04",null));a["default"]=N.exports},a640:function(t,a,i){"use strict";var s=i("d039");t.exports=function(t,a){var i=[][t];return!!i&&s((function(){i.call(null,a||function(){throw 1},1)}))}},ae40:function(t,a,i){var s=i("83ab"),n=i("d039"),e=i("5135"),o=Object.defineProperty,l={},r=function(t){throw t};t.exports=function(t,a){if(e(l,t))return l[t];a||(a={});var i=[][t],c=!!e(a,"ACCESSORS")&&a.ACCESSORS,p=e(a,0)?a[0]:r,d=e(a,1)?a[1]:void 0;return l[t]=!!i&&!n((function(){if(c&&!s)return!0;var t={length:-1};c?o(t,1,{enumerable:!0,get:r}):t[1]=1,i.call(t,p,d)}))}},b0c0:function(t,a,i){var s=i("83ab"),n=i("9bf2").f,e=Function.prototype,o=e.toString,l=/^\s*function ([^ (]*)/,r="name";!s||r in e||n(e,r,{configurable:!0,get:function(){try{return o.call(this).match(l)[1]}catch(t){return""}}})},b727:function(t,a,i){var s=i("0366"),n=i("44ad"),e=i("7b0b"),o=i("50c4"),l=i("65f0"),r=[].push,c=function(t){var a=1==t,i=2==t,c=3==t,p=4==t,d=6==t,g=5==t||d;return function(h,u,m,x){for(var y,f,b=e(h),v=n(b),_=s(u,m,3),S=o(v.length),w=0,C=x||l,j=a?C(h,S):i?C(h,0):void 0;S>w;w++)if((g||w in v)&&(y=v[w],f=_(y,w,b),t))if(a)j[w]=f;else if(f)switch(t){case 3:return!0;case 5:return y;case 6:return w;case 2:r.call(j,y)}else if(p)return!1;return d?-1:c||p?p:j}};t.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6)}},bb2f:function(t,a,i){var s=i("d039");t.exports=!s((function(){return Object.isExtensible(Object.preventExtensions({}))}))},cd76:function(t,a,i){"use strict";var s=i("0cc6"),n=i.n(s);n.a},dca8:function(t,a,i){var s=i("23e7"),n=i("bb2f"),e=i("d039"),o=i("861d"),l=i("f183").onFreeze,r=Object.freeze,c=e((function(){r(1)}));s({target:"Object",stat:!0,forced:c,sham:!n},{freeze:function(t){return r&&o(t)?r(l(t)):t}})},e8b5:function(t,a,i){var s=i("c6b6");t.exports=Array.isArray||function(t){return"Array"==s(t)}},f183:function(t,a,i){var s=i("d012"),n=i("861d"),e=i("5135"),o=i("9bf2").f,l=i("90e3"),r=i("bb2f"),c=l("meta"),p=0,d=Object.isExtensible||function(){return!0},g=function(t){o(t,c,{value:{objectID:"O"+ ++p,weakData:{}}})},h=function(t,a){if(!n(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!e(t,c)){if(!d(t))return"F";if(!a)return"E";g(t)}return t[c].objectID},u=function(t,a){if(!e(t,c)){if(!d(t))return!0;if(!a)return!1;g(t)}return t[c].weakData},m=function(t){return r&&x.REQUIRED&&d(t)&&!e(t,c)&&g(t),t},x=t.exports={REQUIRED:!1,fastKey:h,getWeakData:u,onFreeze:m};s[c]=!0},fb6a:function(t,a,i){"use strict";var s=i("23e7"),n=i("861d"),e=i("e8b5"),o=i("23cb"),l=i("50c4"),r=i("fc6a"),c=i("8418"),p=i("b622"),d=i("1dde"),g=i("ae40"),h=d("slice"),u=g("slice",{ACCESSORS:!0,0:0,1:2}),m=p("species"),x=[].slice,y=Math.max;s({target:"Array",proto:!0,forced:!h||!u},{slice:function(t,a){var i,s,p,d=r(this),g=l(d.length),h=o(t,g),u=o(void 0===a?g:a,g);if(e(d)&&(i=d.constructor,"function"!=typeof i||i!==Array&&!e(i.prototype)?n(i)&&(i=i[m],null===i&&(i=void 0)):i=void 0,i===Array||void 0===i))return x.call(d,h,u);for(s=new(void 0===i?Array:i)(y(u-h,0)),p=0;h<u;h++,p++)h in d&&c(s,p,d[h]);return s.length=p,s}})},fdbc:function(t,a){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}}}]);
//# sourceMappingURL=view-book.ab1dda59.js.map